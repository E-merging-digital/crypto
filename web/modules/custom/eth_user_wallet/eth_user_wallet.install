<?php

/**
 * @file
 * Install/uninstall handlers for the eth_user_wallet module.
 */

use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;

/**
 * Implements hook_install().
 */
function eth_user_wallet_install(): void {
  // Crée les champs utilisateur nécessaires s'ils n'existent pas encore.
  $fields = [
    'field_eth_wallet_address' => ['type' => 'string', 'cardinality' => 1, 'label' => 'Ethereum wallet address'],
    'field_eth_user_salt' => ['type' => 'string', 'cardinality' => 1, 'label' => 'User salt'],
    'field_eth_ciphertext_user' => ['type' => 'string_long', 'cardinality' => 1, 'label' => 'Ciphertext user'],
    'field_eth_ciphertext_server' => ['type' => 'string_long', 'cardinality' => 1, 'label' => 'Ciphertext server'],
  ];

  foreach ($fields as $field_name => $settings) {
    if (!FieldStorageConfig::loadByName('user', $field_name)) {
      FieldStorageConfig::create([
        'field_name' => $field_name,
        'entity_type' => 'user',
        'type' => $settings['type'],
        'cardinality' => $settings['cardinality'],
      ])->save();
    }

    if (!FieldConfig::loadByName('user', 'user', $field_name)) {
      FieldConfig::create([
        'field_name' => $field_name,
        'entity_type' => 'user',
        'bundle' => 'user',
        'label' => $settings['label'],
        'required' => FALSE,
      ])->save();
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function eth_user_wallet_uninstall(): void {
  // Supprime proprement les champs créés.
  $field_names = [
    'field_eth_wallet_address',
    'field_eth_user_salt',
    'field_eth_ciphertext_user',
    'field_eth_ciphertext_server',
  ];

  foreach ($field_names as $field_name) {
    if ($field = FieldConfig::loadByName('user', 'user', $field_name)) {
      $field->delete();
    }
    if ($storage = FieldStorageConfig::loadByName('user', $field_name)) {
      $storage->delete();
    }
  }
}
