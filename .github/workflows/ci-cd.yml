name: CI/CD Drupal 11 – crypto

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

defaults:
  run:
    shell: bash

env:
  COMPOSER_PROCESS_TIMEOUT: 1200
  COMPOSER_MEMORY_LIMIT: -1

jobs:
  phpunit-and-lint:
    name: PhpUnit & lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Mark workspace safe for git
        run: git config --global --add safe.directory "${{ github.workspace }}"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: xml, gd, mysqli, zip, gmp, sqlite, pdo_sqlite
          coverage: none
          tools: composer

      - name: Show loaded PHP modules (debug)
        run: |
          php -v
          php -m | sort | head -n 200

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.composer/cache
            vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install project dependencies
        run: composer install --prefer-dist --no-interaction --optimize-autoloader

      - name: Prepare Drupal test output directories
        run: |
          mkdir -p web/sites/simpletest/browser_output
          chmod -R 775 web/sites/simpletest

      - name: Ensure run-tests.sh is executable
        run: test -f scripts/run-tests.sh && chmod +x scripts/run-tests.sh || true

      - name: Add vendor/bin to PATH
        run: echo "${GITHUB_WORKSPACE}/vendor/bin" >> "$GITHUB_PATH"

      - name: Run GrumPHP (lint + static analysis + PHPUnit)
        env:
          SIMPLETEST_BASE_URL: http://127.0.0.1:8080
          SIMPLETEST_DB: sqlite://localhost/web/sites/default/files/.ht.sqlite
          BROWSERTEST_OUTPUT_DIRECTORY: web/sites/simpletest/browser_output
        run: grumphp run

  behat:
    name: Behat end-to-end tests
    runs-on: ubuntu-latest
    needs: phpunit-and-lint

    steps:
      - uses: actions/checkout@v4

      - name: Mark workspace safe
        run: git config --global --add safe.directory "${{ github.workspace }}"

      - name: Setup PHP (8.3 + SQLite)
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: gd, zip, gmp, sqlite, pdo_sqlite, mbstring, curl
          coverage: none
          tools: composer

      - name: Cache Composer (host)
        uses: actions/cache@v4
        with:
          path: |
            ~/.composer/cache
            vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dev dependencies
        run: composer install --prefer-dist --no-interaction --optimize-autoloader

      - name: Add vendor/bin to PATH
        run: echo "${GITHUB_WORKSPACE}/vendor/bin" >> "$GITHUB_PATH"

      - name: Assert PHP has SQLite (hard fail if missing)
        run: |
          php -m | grep -qi pdo_sqlite || { echo "pdo_sqlite missing"; exit 1; }
          php -m | grep -qi sqlite3 || { echo "sqlite3 missing"; exit 1; }
          php -r 'echo "PDO drivers: ", implode(",", PDO::getAvailableDrivers()), PHP_EOL;'

      - name: Prepare Drupal settings.php for CI (SQLite)
        run: |
          set -e
          cp web/sites/default/default.settings.php web/sites/default/settings.php
          {
            echo ""
            echo "\$databases['default']['default'] = ["
            echo "  'driver' => 'sqlite',"
            echo "  'database' => __DIR__ . '/files/.ht.sqlite',"
            echo "  'prefix' => '',"
            echo "];"
            echo "\$settings['hash_salt'] = 'ci-auto-generated-salt';"
          } >> web/sites/default/settings.php
          mkdir -p web/sites/default/files
          chmod -R 777 web/sites/default/files
          php -r 'file_exists("web/sites/default/files/.ht.sqlite") || touch("web/sites/default/files/.ht.sqlite");'
          ls -l web/index.php

      - name: Install Drupal (SQLite) via Drush
        working-directory: web
        run: |
          set -e
          ../vendor/bin/drush si minimal -y --db-url=sqlite://sites/default/files/.ht.sqlite --site-name="CI Crypto" --account-name=admin --account-pass=admin
          ../vendor/bin/drush cr

      - name: Start PHP built-in server (Drupal router)
        run: |
          nohup php -S 127.0.0.1:8081 -t web web/index.php >/dev/null 2>&1 &
          for i in {1..60}; do
            CODE=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8081/ || true)
            if [ -n "$CODE" ] && [ "$CODE" -ge 200 ] && [ "$CODE" -lt 500 ]; then
              echo "Local server HTTP $CODE"; break
            fi
            echo "Waiting local PHP server (HTTP ${CODE:-none})... ($i/60)"; sleep 2
          done

      - name: Launch Selenium (detached)
        run: |
          docker pull selenium/standalone-chrome:4.30.0
          docker run -d --name selenium -p 4444:4444 --shm-size=2g selenium/standalone-chrome:4.30.0
          for i in {1..120}; do
            if curl -fsS http://127.0.0.1:4444/status | grep -q '"ready":\s*true'; then
              echo "Selenium ready via /status"; break
            fi
            if curl -fsS http://127.0.0.1:4444/wd/hub/status | grep -q '"ready":\s*true'; then
              echo "Selenium ready via /wd/hub/status"; break
            fi
            echo "Waiting Selenium... ($i/120)"; sleep 2
          done

      - name: Verify FeatureContext autoload
        run: php -r 'require "vendor/autoload.php"; echo (class_exists("App\\Tests\\Behat\\FeatureContext") ? "OK": "MISSING"), PHP_EOL;'

      - name: Run Behat (profil CI)
        env:
          BEHAT_PARAMS: '{"extensions":{"Behat\\MinkExtension":{"base_url":"http://127.0.0.1:8081","selenium2":{"wd_host":"http://127.0.0.1:4444/wd/hub"}}}}'
        run: vendor/bin/behat -c behat.yml -p ci --colors --strict

      - name: Dump Selenium logs on failure
        if: failure()
        run: |
          echo "=== Selenium logs ==="
          docker logs selenium || true

      - name: Cleanup Selenium
        if: always()
        run: docker rm -f selenium >/dev/null 2>&1 || true

  deploy:
    name: Déploiement (à adapter selon l’environnement)
    runs-on: ubuntu-latest
    needs: [phpunit-and-lint, behat]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH for private deploy
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

      - name: PHP & Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer

      - name: Composer install for deploy (no dev)
        run: composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader

      - name: Build theme assets (si thème custom existe)
        working-directory: web/themes/custom
        run: |
          if [ -f package.json ]; then npm ci && npm run build; else echo "No theme build"; fi

      - name: Push sur le repo de production
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub CI"
          git remote add production ${{ secrets.PRODUCTION_SSH_REPO }}
          git push production main:main --force-with-lease

      - name: Run Drush post-deploy
        env:
          PROD_SSH: ${{ secrets.PROD_SSH }}
        run: |
          ssh -o StrictHostKeyChecking=no "$PROD_SSH" \
            "cd web && vendor/bin/drush cim -y && vendor/bin/drush updb -y && vendor/bin/drush cr"
