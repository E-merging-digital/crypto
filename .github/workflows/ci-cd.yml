name: CI/CD Drupal 11 – crypto

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

defaults:
  run:
    shell: bash

env:
  COMPOSER_PROCESS_TIMEOUT: 1200
  COMPOSER_MEMORY_LIMIT: -1

jobs:
  phpunit-and-lint:
    name: PhpUnit & lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Mark workspace safe for git
        run: git config --global --add safe.directory "${{ github.workspace }}"

      - name: Setup PHP 8.3
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none
          extensions: xml, gd, mysqli, zip, gmp
          tools: composer

      - name: Show loaded PHP modules (debug)
        run: php -m | head -n 200

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.composer/cache
            vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install project dependencies
        run: composer install --prefer-dist --no-interaction --optimize-autoloader

      - name: Prepare Drupal test output directories
        run: |
          mkdir -p web/sites/simpletest/browser_output
          chmod -R 775 web/sites/simpletest

      - name: Ensure run-tests.sh is executable
        run: test -f scripts/run-tests.sh && chmod +x scripts/run-tests.sh || true

      - name: Add vendor/bin to PATH
        run: echo "${GITHUB_WORKSPACE}/vendor/bin" >> "$GITHUB_PATH"

      - name: Run GrumPHP (lint + static analysis + PHPUnit)
        env:
          SIMPLETEST_BASE_URL: http://127.0.0.1:8080
          SIMPLETEST_DB: sqlite://localhost/web/sites/default/files/.ht.sqlite
          BROWSERTEST_OUTPUT_DIRECTORY: web/sites/simpletest/browser_output
        run: grumphp run

  behat:
    name: Behat end-to-end tests
    runs-on: ubuntu-latest
    needs: phpunit-and-lint

    container:
      image: ghcr.io/e-merging-digital/crypto:php8.3-gd-gmp-git
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    services:
      web:
        image: ghcr.io/e-merging-digital/crypto:php8.3-gd-gmp-git
        options: >-
          -v ${{ github.workspace }}:/var/www/html:rw
      selenium:
        image: selenium/standalone-chrome:latest
        ports:
          - 4444:4444
        options: >-
          --shm-size="2g"
          --health-cmd="curl -s http://localhost:4444/status | grep -q 'ready'"
          --health-interval=5s --health-timeout=5s --health-retries=30
          -e SE_NODE_MAX_SESSIONS=1
          -e SE_NODE_SESSION_TIMEOUT=300
      # Service DB conservé (structure identique), non utilisé en CI SQLite :
      db:
        image: mariadb:10.6
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ci_crypto
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -uroot -proot --silent"
          --health-interval=5s --health-timeout=5s --health-retries=30

    steps:
      - uses: actions/checkout@v4

      - name: Mark workspace safe
        run: git config --global --add safe.directory "${{ github.workspace }}"

      - name: Sanity check shell & PATH
        run: |
          command -v bash
          echo "PATH=$PATH"

      - name: Cache Composer (in container)
        uses: actions/cache@v4
        with:
          path: |
            /github/home/.composer/cache
            vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dev dependencies
        run: composer install --prefer-dist --no-interaction --optimize-autoloader

      - name: Add vendor/bin to PATH
        run: echo "${GITHUB_WORKSPACE}/vendor/bin" >> "$GITHUB_PATH"

      # Mise à niveau SQLite >= 3.45 + extension PHP sqlite3 (dans le job container)
      - name: Upgrade SQLite (job container) & ensure php-sqlite3
        run: |
          set -e
          . /etc/os-release
          echo "deb http://deb.debian.org/debian ${VERSION_CODENAME}-backports main" > /etc/apt/sources.list.d/backports.list
          apt-get update -y
          DEBIAN_FRONTEND=noninteractive apt-get -y -t ${VERSION_CODENAME}-backports install libsqlite3-0 sqlite3 || true
          if ! php -m | grep -qi sqlite3; then
            if apt-cache show php8.3-sqlite3 >/dev/null 2>&1; then
              DEBIAN_FRONTEND=noninteractive apt-get install -y php8.3-sqlite3
            elif apt-cache show php8.2-sqlite3 >/dev/null 2>&1; then
              DEBIAN_FRONTEND=noninteractive apt-get install -y php8.2-sqlite3
            else
              DEBIAN_FRONTEND=noninteractive apt-get install -y php-sqlite3 || true
            fi
          fi
          echo "sqlite3 CLI version:"; sqlite3 --version || true
          echo "PHP SQLite3 lib version:"
          php -r 'echo (class_exists("SQLite3")? (SQLite3::version()["lib"]??"n/a") : "no-sqlite3-ext"), PHP_EOL;'

      # Préparer settings.php pour SQLite
      - name: Prepare Drupal settings.php for CI (SQLite)
        run: |
          set -e
          cp web/sites/default/default.settings.php web/sites/default/settings.php
          {
            echo ""
            echo "\$databases['default']['default'] = ["
            echo "  'driver' => 'sqlite',"
            echo "  'database' => __DIR__ . '/files/.ht.sqlite',"
            echo "  'prefix' => '',"
            echo "];"
            echo "\$settings['hash_salt'] = 'ci-auto-generated-salt';"
            echo "\$settings['trusted_host_patterns'][] = '^web$';"
          } >> web/sites/default/settings.php
          mkdir -p web/sites/default/files
          chmod -R 777 web/sites/default/files
          php -r 'file_exists("web/sites/default/files/.ht.sqlite") || touch("web/sites/default/files/.ht.sqlite");'

      # Installer Drupal (SQLite) pour un site opérationnel avant Behat
      - name: Install Drupal (SQLite) via Drush
        working-directory: web
        run: |
          ../vendor/bin/drush si minimal -y --db-url=sqlite://sites/default/files/.ht.sqlite --site-name="CI Crypto" --account-name=admin --account-pass=admin
          ../vendor/bin/drush cr

      - name: Install curl & jq in job container
        run: |
          if ! command -v curl >/dev/null 2>&1 || ! command -v jq >/dev/null 2>&1; then
            apt-get update -y
            DEBIAN_FRONTEND=noninteractive apt-get install -y curl jq
          fi

      - name: Wait for Selenium service (robust)
        run: |
          set -euo pipefail
          ATTEMPTS=120
          for i in $(seq 1 $ATTEMPTS); do
            if curl -fsS http://selenium:4444/status | jq -e '.ready == t
