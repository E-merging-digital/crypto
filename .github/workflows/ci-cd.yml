name: CI/CD Drupal 11 – crypto
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  phpunit:
    name: PhpUnit & lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: PHP & Composer
        uses: shivammathur/setup-php@v3
        with:
          php-version: '8.3'                        # Drupal 11 support PHP 8.3
          coverage: none
          tools: composer
          extensions: xml, gd, mysqli, zip

      - name: Install project dependencies
        run: |
          composer install --prefer-dist --no-interaction --optimize-autoloader

      - name: PHPStan + Code Style
        run: |
          composer drupal:validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run PHPUnit
        run: |
          cd web/sites/simpletest && ../../../vendor/bin/phpunit

  behat:
    name: Behat end-to‑end tests
    runs-on: ubuntu-latest
    needs: phpunit
    container:
      image: drupalci/drupalci:latest          # contain dependencies for Behat
    steps:
      - uses: actions/checkout@v4
      - name: Setup Behat
        run: |
          composer require --dev behat/mink-extension drupal/drupal-extension behat/mink-selenium2-driver
          cd web && behat --colors --out formats

  deploy:
    name: Déploiement (à adapter selon l’environnement)
    runs-on: ubuntu-latest
    needs: [ phpunit, behat ]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Set up SSH for private deploy
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

      - name: PHP & Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer

      - name: Composer install for deploy
        run: |
          composer install --no-dev --prefer-dist --optimize-autoloader

      - name: Build theme assets (si thème custom existe)
        working-directory: web/themes/custom
        run: |
          npm ci && npm run build

      - name: Push sur le repo de production
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name  "GitHub CI"
          git remote add production ${{ secrets.PRODUCTION_SSH_REPO }}
          git push production main:main --force-with-lease

      - name: Run Drush post-deploy
        run: |
          ssh ${{ secrets.PROD_SSH }} "cd web && vendor/bin/drush cim -y && drush updb -y && drush cr"
        env:
          PROD_SSH: ${{ secrets.PROD_SSH }}

